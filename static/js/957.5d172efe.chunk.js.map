{"version":3,"file":"static/js/957.5d172efe.chunk.js","mappings":"+MAwDA,UApDqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GA6BtB,OA3BAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAETxB,EAAQ,CAADuB,EAAAE,KAAA,QAEQ,OADlBV,EAAS,6BACTJ,GAAW,GAAOY,EAAAG,OAAA,wBAAAH,EAAAE,KAAA,EAKUE,EAAAA,EAAAA,IAAU,gCAADC,OACL5B,IAChC,KAAD,EAFKsB,EAAeC,EAAAM,KAGrBtB,EAAgBe,EAAgBQ,MAEhCnB,GAAW,GAAOY,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAElBS,QAAQlB,MAAM,uBAAsBS,EAAAQ,IACpChB,EAAS,0CACTJ,GAAW,GAAO,yBAAAY,EAAAU,OAAA,GAAAZ,EAAA,mBAErB,kBApBc,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAsBflB,GACF,GAAG,CAACjB,IAGAU,GACK0B,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAIRvB,GACKsB,EAAAA,EAAAA,KAAA,KAAAC,SAAIvB,KAIXwB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAAQ/B,EAAaiC,UACxBD,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,aAAW/B,EAAakC,cAIjC,C","sources":["Pages/MovieDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!movieId) {\n          setError('Movie ID is not provided.');\n          setLoading(false);\n          return;\n        }\n\n        // Exemplu pentru endpoint-ul de informații complete despre un film\n        const detailsResponse = await axios.get(\n          `/movies/get-movie-details?id=${movieId}`\n        );\n        setMovieDetails(detailsResponse.data);\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('An error occurred while fetching data.');\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]); // Asigură-te că specifici toate dependențele necesare pentru useEffect\n\n  // Afisează un mesaj de încărcare dacă datele sunt încă în curs de preluare\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  // Afisează un mesaj de eroare dacă apare o eroare în timpul preluării datelor\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div>\n      <h2>Movie Details</h2>\n      <p>Title: {movieDetails.title}</p>\n      <p>Overview: {movieDetails.overview}</p>\n      {/* Puteți adăuga mai multe componente sau logica aici */}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","detailsResponse","_context","prev","next","abrupt","axios","concat","sent","data","t0","console","stop","apply","arguments","_jsx","children","_jsxs","title","overview"],"sourceRoot":""}