{"version":3,"file":"static/js/957.ad7ccaf9.chunk.js","mappings":"sMA+CA,UAxCqB,SAAHA,GAAmB,IAAbC,EAAKD,EAALC,MACtBC,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAoBtB,OAlBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,EAAAA,EAAAA,IAAU,6BAADC,OACD1B,EAAM2B,OAAOC,QAAO,2BACjD,KAAD,EAFKP,EAAQC,EAAAO,KAGdvB,EAAgBe,EAASS,MACzBpB,GAAW,GAAOY,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAElBU,QAAQnB,MAAM,gCAA+BS,EAAAS,IAC7CjB,EAAS,mDACTJ,GAAW,GAAO,yBAAAY,EAAAW,OAAA,GAAAb,EAAA,kBAErB,kBAZsB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAcvBnB,GACF,GAAG,CAAChB,EAAM2B,OAAOC,UAEbnB,GACK2B,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAGRxB,GACKuB,EAAAA,EAAAA,KAAA,KAAAC,SAAIxB,KAIXyB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAAQhC,EAAakC,WAI9B,C","sources":["Pages/MovieDetails.js"],"sourcesContent":["\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst MovieDetails = ({ match }) => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `/movies/get-movie-details/${match.params.movieId}?language=en-US&page=1`\n        );\n        setMovieDetails(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setError('An error occurred while fetching movie details.');\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [match.params.movieId]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div>\n      <h2>Movie Details</h2>\n      <p>Title: {movieDetails.title}</p>\n      {/* Add other details you want to display */}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["_ref","match","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchMovieDetails","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","params","movieId","sent","data","t0","console","stop","apply","arguments","_jsx","children","_jsxs","title"],"sourceRoot":""}