{"version":3,"file":"static/js/689.a74b86f8.chunk.js","mappings":"sMA+CA,UA5Ca,WACX,IAAAA,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAmBtB,OAjBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgBC,EAAAA,EAAAA,IAAU,6BAA6B,KAAD,EAA9DJ,EAAeC,EAAAI,KACrBpB,EAAgBe,EAAgBM,MAEhCjB,GAAW,GAAOY,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAElBO,QAAQhB,MAAM,uBAAsBS,EAAAM,IACpCd,EAAS,0CACTJ,GAAW,GAAO,yBAAAY,EAAAQ,OAAA,GAAAV,EAAA,kBAErB,kBAZc,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAcfhB,GACF,GAAG,IACCP,GACKwB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAIRrB,GACKoB,EAAAA,EAAAA,KAAA,KAAAC,SAAIrB,KAIXsB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACJD,EAAAA,EAAAA,KAAA,MAAAC,SACG7B,EAAa+B,KAAI,SAAAC,GAAM,OACtBJ,EAAAA,EAAAA,KAAA,MAAAC,SAAqBG,EAAOC,WAAnBD,EAAOE,GAA2B,QAMrD,C","sources":["Pages/Cast.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Cast = () => {\n  const [movieCredits, setMovieCredits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        \n        const creditsResponse = await axios.get('/movies/get-movie-credits');\n        setMovieCredits(creditsResponse.data);\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('An error occurred while fetching data.');\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);  \n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  \n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div>\n      <h2>Movie Credits</h2>\n      <ul>\n        {movieCredits.map(credit => (\n          <li key={credit.id}>{credit.actorName}</li>\n        ))}\n      </ul>\n  \n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movieCredits","setMovieCredits","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","creditsResponse","_context","prev","next","axios","sent","data","t0","console","stop","apply","arguments","_jsx","children","_jsxs","map","credit","actorName","id"],"sourceRoot":""}